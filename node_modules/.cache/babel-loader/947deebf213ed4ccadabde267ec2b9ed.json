{"ast":null,"code":"// function calculate() {\n//   budget_additionally = \"\";\n// //   var state = $(\"#state\").val();\n// //   var state_name = $(\"#state option:selected\").text();\n// //   var customer_type = $(\"#customer_type\").val();\n//   var category = get_state_category(state);\n//   checkbox_selected = \"Roof Top Area\";\n//   plant_size = calculate_plant_size_area();\n//   if (plant_size > 500) {\n//     message =\n//       \"As per Roof Top Area ,capacity found is beyond 500kW. Maximum limit of capacity is 500kW\";\n//     new Messi(message, {\n//       title: \"Error\",\n//       titleClass: \"anim error\",\n//       modal: true,\n//       buttons: [{ id: 0, label: \"Ok\", val: \"X\" }],\n//     });\n//     return false;\n//   }\n//   var cost1 = get_benchmark(plant_size, category);\n//   output_without_subsidy = plant_size * cost1;\n//   output_without_subsidy = Number(output_without_subsidy).toFixed(0);\n//   //====\n//   irradiation = get_irradiation(state);\n//   generate = irradiation * 0.0036 * 1.1;\n//   generate = Number(generate).toFixed(1);\n//   output_electricity_annual = generate * plant_size * 300;\n//   output_electricity_annual = Number(output_electricity_annual).toFixed(0);\n//   output_electricity_lifetime = output_electricity_annual * 25;\n//   //---\n//   //====CO2 and tree====\n//   value_a = output_electricity_lifetime * 0.82;\n//   value_b = 25 * 25;\n//   co2 = value_a / 1000;\n//   co2 = Number(co2).toFixed(0);\n//   tree = value_a / value_b;\n//   tree = Number(tree).toFixed(0);\n//   //-----\n//   //===========\n//   output_electricity_unit = $(\"#electricity_txt\").val();\n//   output_saving_annually = output_electricity_annual * output_electricity_unit;\n//   output_saving_monthly =\n//     (output_electricity_annual / 12) * output_electricity_unit;\n//   output_saving_monthly = Number(output_saving_monthly).toFixed(0);\n//   output_saving_lifetime = output_saving_annually * 25;\n//   //----------\n//   $(\".output\").html(\"\");\n//   $(\"#output_state\").html(state_name);\n//   $(\"#output_irradiation\").html(irradiation);\n//   $(\"#output_generate\").html(generate);\n//   $(\"#output_choosen\").html(checkbox_selected); //1\n//   $(\"#output_budget_additionally\").html(budget_additionally); //1\n//   $(\"#output_size\").html(plant_size); //2\n//   $(\"#bench_cost\").html(benchmark); //2\n//   $(\"#output_without_subsidy\").html(output_without_subsidy); //3\n//   $(\"#output_subsidy_heading\").html(subsidy_for_heading); //4 //subsidy - old\n//   $(\"#output_subsidy\").html(output_subsidy); //5\n//   $(\"#output_electricity_annual\").html(output_electricity_annual); //6\n//   $(\"#output_electricity_lifetime\").html(output_electricity_lifetime); //7\n//   $(\"#output_electricity_unit\").html(output_electricity_unit); //8\n//   $(\"#output_saving_monthly\").html(output_saving_monthly); //9\n//   $(\"#output_saving_annually\").html(output_saving_annually); //10\n//   $(\"#output_saving_lifetime\").html(output_saving_lifetime); //11\n//   $(\"#output_co2\").html(co2);\n//   $(\"#output_tree\").html(tree);\n// }\n// function calculate_plant_size_area() {\n//   roof_area_txt = $(\"#roof_area_txt\").val();\n//   radio_gp = $('input[name=\"radio_gp\"]:checked').val();\n//   if (radio_gp == \"1\") {\n//     roof_area = 0.092903 * roof_area_txt;\n//   } else {\n//     roof_area = roof_area_txt;\n//   }\n//   roof_area_percentage = $(\"#roof_area_percentage_txt\").val();\n//   capacity = (roof_area * roof_area_percentage) / 1000;\n//   //capacity = Number(capacity).toFixed(0); //modified on 31Jan2018\n//   capacity = Number(capacity).toFixed(1);\n//   return capacity;\n// }\n// function get_benchmark(plant_size, category) {\n//   var plant_size = parseInt(plant_size);\n//   benchmark = 0;\n//   for (i = 0; i < data.length; i++) {\n//     if (plant_size == 1) {\n//       if (data[i].category == category && plant_size == data[i].rangeTo) {\n//         cost = data[i].cost;\n//         benchmark = cost * 1000;\n//       }\n//     } else {\n//       if (\n//         data[i].category == category &&\n//         plant_size > data[i].rangeFrom &&\n//         plant_size <= data[i].rangeTo\n//       ) {\n//         cost = data[i].cost;\n//         benchmark = cost * 1000;\n//       }\n//     }\n//   }\n//   benchmark = Number(benchmark).toFixed(0);\n//   return benchmark;\n// }\n// const data_state_catg = [\n//   { 1: \"S\" },\n//   { 2: \"S\" },\n//   { 3: \"G\" },\n//   { 4: \"G\" },\n//   { 5: \"S\" },\n//   { 6: \"G\" },\n//   { 7: \"G\" },\n//   { 8: \"G\" },\n//   { 9: \"G\" },\n//   { 10: \"G\" },\n//   { 11: \"N\" },\n//   { 12: \"N\" },\n//   { 13: \"N\" },\n//   { 14: \"N\" },\n//   { 15: \"N\" },\n//   { 16: \"N\" },\n//   { 17: \"N\" },\n//   { 18: \"N\" },\n//   { 19: \"G\" },\n//   { 20: \"G\" },\n//   { 21: \"G\" },\n//   { 22: \"G\" },\n//   { 23: \"G\" },\n//   { 24: \"G\" },\n//   { 27: \"G\" },\n//   { 28: \"G\" },\n//   { 29: \"G\" },\n//   { 30: \"G\" },\n//   { 31: \"I\" },\n//   { 32: \"G\" },\n//   { 33: \"G\" },\n//   { 34: \"G\" },\n//   { 35: \"I\" },\n//   { 36: \"G\" },\n//   { 37: \"G\" },\n//   { 38: \"G\" },\n// ];\n// function get_state_category(state) {\n//   for (let i = 0; i < data_state_catg.length; i++) {\n//     if (data_state_catg[i].state == state) {\n//       category = data_state_catg[i].category;\n//     }\n//   }\n//   return category;\n// }\n// const data_irradiation = [\n//   { 1: \"1046.26\" },\n//   { 2: \"1046.26\" },\n//   { 3: \"1156.39\" },\n//   { 4: \"1156.39\" },\n//   { 5: \"1046.26\" },\n//   { 6: \"1156.39\" },\n//   { 7: \"1156.39\" },\n//   { 8: \"1266.52\" },\n//   { 9: \"1156.39\" },\n//   { 10: \"1156.39\" },\n//   { 11: \"1046.26\" },\n//   { 12: \"1046.26\" },\n//   { 13: \"1046.26\" },\n//   { 14: \"1046.26\" },\n//   { 15: \"1046.26\" },\n//   { 16: \"1046.26\" },\n//   { 17: \"1046.26\" },\n//   { 18: \"1046.26\" },\n//   { 19: \"1156.39\" },\n//   { 20: \"1156.39\" },\n//   { 21: \"1156.39\" },\n//   { 22: \"1266.52\" },\n//   { 23: \"1266.52\" },\n//   { 24: \"1266.52\" },\n//   { 25: \"1266.52\" },\n//   { 26: \"1266.52\" },\n//   { 27: \"1266.52\" },\n//   { 28: \"1266.52\" },\n//   { 29: \"1266.52\" },\n//   { 30: \"1266.52\" },\n//   { 31: \"1266.52\" },\n//   { 32: \"1266.52\" },\n//   { 33: \"1266.52\" },\n//   { 34: \"1266.52\" },\n//   { 35: \"1156.39\" },\n//   { 36: \"1266.52\" },\n// ];\n// function get_irradiation(state) {\n//   for (i = 0; i < data_irradiation.length; i++) {\n//     if (data_irradiation[i].state == state) {\n//       irradiation = data_irradiation[i].irradiation;\n//     }\n//   }\n//   return irradiation;\n// }","map":{"version":3,"sources":["/home/hrithik_raj/Desktop/Projects/SolarView/new-frontend/solar-view/src/data/calculator.js"],"names":[],"mappingssourcesContent":["// function calculate() {\n//   budget_additionally = \"\";\n\n// //   var state = $(\"#state\").val();\n// //   var state_name = $(\"#state option:selected\").text();\n// //   var customer_type = $(\"#customer_type\").val();\n//   var category = get_state_category(state);\n\n//   checkbox_selected = \"Roof Top Area\";\n//   plant_size = calculate_plant_size_area();\n//   if (plant_size > 500) {\n//     message =\n//       \"As per Roof Top Area ,capacity found is beyond 500kW. Maximum limit of capacity is 500kW\";\n//     new Messi(message, {\n//       title: \"Error\",\n//       titleClass: \"anim error\",\n//       modal: true,\n//       buttons: [{ id: 0, label: \"Ok\", val: \"X\" }],\n//     });\n//     return false;\n//   }\n\n//   var cost1 = get_benchmark(plant_size, category);\n//   output_without_subsidy = plant_size * cost1;\n//   output_without_subsidy = Number(output_without_subsidy).toFixed(0);\n\n//   //====\n//   irradiation = get_irradiation(state);\n//   generate = irradiation * 0.0036 * 1.1;\n//   generate = Number(generate).toFixed(1);\n//   output_electricity_annual = generate * plant_size * 300;\n//   output_electricity_annual = Number(output_electricity_annual).toFixed(0);\n//   output_electricity_lifetime = output_electricity_annual * 25;\n//   //---\n\n//   //====CO2 and tree====\n//   value_a = output_electricity_lifetime * 0.82;\n//   value_b = 25 * 25;\n//   co2 = value_a / 1000;\n//   co2 = Number(co2).toFixed(0);\n//   tree = value_a / value_b;\n//   tree = Number(tree).toFixed(0);\n//   //-----\n\n//   //===========\n//   output_electricity_unit = $(\"#electricity_txt\").val();\n//   output_saving_annually = output_electricity_annual * output_electricity_unit;\n//   output_saving_monthly =\n//     (output_electricity_annual / 12) * output_electricity_unit;\n//   output_saving_monthly = Number(output_saving_monthly).toFixed(0);\n//   output_saving_lifetime = output_saving_annually * 25;\n//   //----------\n\n//   $(\".output\").html(\"\");\n//   $(\"#output_state\").html(state_name);\n//   $(\"#output_irradiation\").html(irradiation);\n//   $(\"#output_generate\").html(generate);\n\n//   $(\"#output_choosen\").html(checkbox_selected); //1\n//   $(\"#output_budget_additionally\").html(budget_additionally); //1\n\n//   $(\"#output_size\").html(plant_size); //2\n//   $(\"#bench_cost\").html(benchmark); //2\n//   $(\"#output_without_subsidy\").html(output_without_subsidy); //3\n//   $(\"#output_subsidy_heading\").html(subsidy_for_heading); //4 //subsidy - old\n//   $(\"#output_subsidy\").html(output_subsidy); //5\n//   $(\"#output_electricity_annual\").html(output_electricity_annual); //6\n//   $(\"#output_electricity_lifetime\").html(output_electricity_lifetime); //7\n//   $(\"#output_electricity_unit\").html(output_electricity_unit); //8\n//   $(\"#output_saving_monthly\").html(output_saving_monthly); //9\n//   $(\"#output_saving_annually\").html(output_saving_annually); //10\n//   $(\"#output_saving_lifetime\").html(output_saving_lifetime); //11\n\n//   $(\"#output_co2\").html(co2);\n//   $(\"#output_tree\").html(tree);\n// }\n\n// function calculate_plant_size_area() {\n//   roof_area_txt = $(\"#roof_area_txt\").val();\n//   radio_gp = $('input[name=\"radio_gp\"]:checked').val();\n//   if (radio_gp == \"1\") {\n//     roof_area = 0.092903 * roof_area_txt;\n//   } else {\n//     roof_area = roof_area_txt;\n//   }\n\n//   roof_area_percentage = $(\"#roof_area_percentage_txt\").val();\n//   capacity = (roof_area * roof_area_percentage) / 1000;\n//   //capacity = Number(capacity).toFixed(0); //modified on 31Jan2018\n//   capacity = Number(capacity).toFixed(1);\n//   return capacity;\n// }\n\n// function get_benchmark(plant_size, category) {\n//   var plant_size = parseInt(plant_size);\n//   benchmark = 0;\n//   for (i = 0; i < data.length; i++) {\n//     if (plant_size == 1) {\n//       if (data[i].category == category && plant_size == data[i].rangeTo) {\n//         cost = data[i].cost;\n//         benchmark = cost * 1000;\n//       }\n//     } else {\n//       if (\n//         data[i].category == category &&\n//         plant_size > data[i].rangeFrom &&\n//         plant_size <= data[i].rangeTo\n//       ) {\n//         cost = data[i].cost;\n//         benchmark = cost * 1000;\n//       }\n//     }\n//   }\n\n//   benchmark = Number(benchmark).toFixed(0);\n//   return benchmark;\n// }\n\n// const data_state_catg = [\n//   { 1: \"S\" },\n//   { 2: \"S\" },\n//   { 3: \"G\" },\n//   { 4: \"G\" },\n//   { 5: \"S\" },\n//   { 6: \"G\" },\n//   { 7: \"G\" },\n//   { 8: \"G\" },\n//   { 9: \"G\" },\n//   { 10: \"G\" },\n//   { 11: \"N\" },\n//   { 12: \"N\" },\n//   { 13: \"N\" },\n//   { 14: \"N\" },\n//   { 15: \"N\" },\n//   { 16: \"N\" },\n//   { 17: \"N\" },\n//   { 18: \"N\" },\n//   { 19: \"G\" },\n//   { 20: \"G\" },\n//   { 21: \"G\" },\n//   { 22: \"G\" },\n//   { 23: \"G\" },\n//   { 24: \"G\" },\n//   { 27: \"G\" },\n//   { 28: \"G\" },\n//   { 29: \"G\" },\n//   { 30: \"G\" },\n//   { 31: \"I\" },\n//   { 32: \"G\" },\n//   { 33: \"G\" },\n//   { 34: \"G\" },\n//   { 35: \"I\" },\n//   { 36: \"G\" },\n//   { 37: \"G\" },\n//   { 38: \"G\" },\n// ];\n\n// function get_state_category(state) {\n//   for (let i = 0; i < data_state_catg.length; i++) {\n//     if (data_state_catg[i].state == state) {\n//       category = data_state_catg[i].category;\n//     }\n//   }\n\n//   return category;\n// }\n\n// const data_irradiation = [\n//   { 1: \"1046.26\" },\n//   { 2: \"1046.26\" },\n//   { 3: \"1156.39\" },\n//   { 4: \"1156.39\" },\n//   { 5: \"1046.26\" },\n//   { 6: \"1156.39\" },\n//   { 7: \"1156.39\" },\n//   { 8: \"1266.52\" },\n//   { 9: \"1156.39\" },\n//   { 10: \"1156.39\" },\n//   { 11: \"1046.26\" },\n//   { 12: \"1046.26\" },\n//   { 13: \"1046.26\" },\n//   { 14: \"1046.26\" },\n//   { 15: \"1046.26\" },\n//   { 16: \"1046.26\" },\n//   { 17: \"1046.26\" },\n//   { 18: \"1046.26\" },\n//   { 19: \"1156.39\" },\n//   { 20: \"1156.39\" },\n//   { 21: \"1156.39\" },\n//   { 22: \"1266.52\" },\n//   { 23: \"1266.52\" },\n//   { 24: \"1266.52\" },\n//   { 25: \"1266.52\" },\n//   { 26: \"1266.52\" },\n//   { 27: \"1266.52\" },\n//   { 28: \"1266.52\" },\n//   { 29: \"1266.52\" },\n//   { 30: \"1266.52\" },\n//   { 31: \"1266.52\" },\n//   { 32: \"1266.52\" },\n//   { 33: \"1266.52\" },\n//   { 34: \"1266.52\" },\n//   { 35: \"1156.39\" },\n//   { 36: \"1266.52\" },\n// ];\n\n// function get_irradiation(state) {\n//   for (i = 0; i < data_irradiation.length; i++) {\n//     if (data_irradiation[i].state == state) {\n//       irradiation = data_irradiation[i].irradiation;\n//     }\n//   }\n\n//   return irradiation;\n// }\n"]},"metadata":{},"sourceType":"module"}